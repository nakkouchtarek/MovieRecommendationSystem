{"ast":null,"code":"export async function check_token_validity(token) {\n  const payload = {\n    'token': token\n  };\n  try {\n    const response = await fetch('http://localhost:8000/check_validity/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const responseData = await response.json();\n    return responseData['state'] == 'valid';\n  } catch (error) {\n    return 'expired';\n  }\n}\n;\nexport function get_token() {\n  return document.cookie.split('; ').filter(row => row.startsWith('token=')).map(c => c.split('=')[1])[0];\n}\nexport function check_string(string) {\n  return string === '';\n}\nexport const linkStyle = {\n  cursor: 'pointer'\n};","map":{"version":3,"names":["check_token_validity","token","payload","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","responseData","json","error","get_token","document","cookie","split","filter","row","startsWith","map","c","check_string","string","linkStyle","cursor"],"sources":["/home/user/Stuff/NP/npreact/src/imports.js"],"sourcesContent":["export async function check_token_validity(token)\n{\n  const payload = {\n    'token': token,\n  };\n\n  try {\n    const response = await fetch('http://localhost:8000/check_validity/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const responseData = await response.json();\n    return responseData['state'] == 'valid';\n\n  } catch (error) {\n    return 'expired';\n  }\n};\n\nexport function get_token()\n{\n  return document.cookie.split('; ').filter(row => row.startsWith('token=')).map(c=>c.split('=')[1])[0];\n}\n\nexport function check_string(string)\n{\n    return string === '';\n}\n\nexport const linkStyle = {cursor: 'pointer'};"],"mappings":"AAAA,OAAO,eAAeA,oBAAoBA,CAACC,KAAK,EAChD;EACE,MAAMC,OAAO,GAAG;IACd,OAAO,EAAED;EACX,CAAC;EAED,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;IAC3D;IAEA,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY,CAAC,OAAO,CAAC,IAAI,OAAO;EAEzC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAO,SAAS;EAClB;AACF;AAAC;AAED,OAAO,SAASC,SAASA,CAAA,EACzB;EACE,OAAOC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAEA,CAAC,CAACL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG;AAEA,OAAO,SAASM,YAAYA,CAACC,MAAM,EACnC;EACI,OAAOA,MAAM,KAAK,EAAE;AACxB;AAEA,OAAO,MAAMC,SAAS,GAAG;EAACC,MAAM,EAAE;AAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}